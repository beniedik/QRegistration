<?php
include 'template/magic.php';
include 'dbconn.php';

if (isset($_FILES['itempicturefront']))
{
    $errors = [];
    $path = $upload_path;
    $extensions = ['jpg, png, gif, webp'];
    $filefront_name = $_FILES['itempicturefront']['name'];
    $enc_filenamefront = md5($_FILES['itempicturefront']['name']);
    $filefront_tmp = $_FILES['itempicturefront']['tmp_name'];
    $filefront_type = $_FILES['itempicturefront']['type'];
    $filefront_size = $_FILES['itempicturefront']['size'];
    $filefront_ext = strtolower(end(explode('.', $filefront_name)));
    $filefront = $path . $enc_filenamefront . "." . $filefront_ext;

    //$certpdfurlAutogenerated = $ssh2host . "/". $path . "" . $enc_filename.'.' .$file_ext;

    if (!in_array($filefront_ext, $extensions))
    {
        $errors[] = 'Extension not allowed: ' . $filefront_name . ' ' . $filefront_type;
    }
    if ($filefront_size > 16777216)
    {
        $errors[] = 'File size exceeds limit: ' . $filefront_name . ' ' . $filefront_type;
    }
    if (empty($errors))
    {
        //the uploaded file is stored in stash/ folder
        if(move_uploaded_file($filefront_tmp, $filefront))
        {
            //this will be the path to be recorded in the DB
            //$dst = $ssh2destpath . $enc_filename.'.' .$file_ext;

            //close file handle
            fclose(realpath($filefront));
            
            //change to path of file (stash)
            chdir($path);
        }
    }   
}

if (isset($_FILES['itempictureback']))
{
    $errors = [];
    $path = $upload_path;
    $extensions = ['jpg, png, gif, webp'];
    $fileback_name = $_FILES['itempictureback']['name'];
    $enc_filenameback = md5($_FILES['itempictureback']['name']);
    $fileback_tmp = $_FILES['itempictureback']['tmp_name'];
    $fileback_type = $_FILES['itempictureback']['type'];
    $fileback_size = $_FILES['itempictureback']['size'];
    $fileback_ext = strtolower(end(explode('.', $fileback_name)));
    $fileback = $path . $enc_filenameback . "." . $fileback_ext;

    if (!in_array($fileback_ext, $extensions))
    {
        $errors[] = 'Extension not allowed: ' . $fileback_name . ' ' . $fileback_type;
    }
    if ($fileback_size > 16777216)
    {
        $errors[] = 'File size exceeds limit: ' . $fileback_name . ' ' . $fileback_type;
    }
    if (empty($errors))
    {
        //the uploaded file is stored in stash/ folder
        if(move_uploaded_file($fileback_tmp, $fileback))
        {
            //this will be the path to be recorded in the DB
            //$dst = $ssh2destpath . $enc_filename.'.' .$file_ext;

            //close file handle
            fclose(realpath($fileback));
            
            //change to path of file (stash)
            chdir($path);
        }
    } 
}

if (isset($_FILES['itempicturesn']))
{
    $errors = [];
    $path = $upload_path;
    $extensions = ['jpg, png, gif, webp'];
    $filesn_name = $_FILES['itempicturesn']['name'];
    $enc_filenamesn = md5($_FILES['itempicturesn']['name']);
    $filesn_tmp = $_FILES['itempicturesn']['tmp_name'];
    $filesn_type = $_FILES['itempicturesn']['type'];
    $filesn_size = $_FILES['itempicturesn']['size'];
    $filesn_ext = strtolower(end(explode('.', $filesn_name)));
    $filesn = $path . $enc_filenamesn . "." . $filesn_ext;

    if (!in_array($filesn_ext, $extensions))
    {
        $errors[] = 'Extension not allowed: ' . $filesn_name . ' ' . $filesn_type;
    }
    if ($filesn_size > 16777216)
    {
        $errors[] = 'File size exceeds limit: ' . $filesn_name . ' ' . $filesn_type;
    }
    if (empty($errors))
    {
        //the uploaded file is stored in stash/ folder
        if(move_uploaded_file($filesn_tmp, $filesn))
        {
            //this will be the path to be recorded in the DB
            //$dst = $ssh2destpath . $enc_filename.'.' .$file_ext;

            //close file handle
            fclose(realpath($filesn));
            
            //change to path of file (stash)
            chdir($path);
        }
    } 
}

//echo "Hi!";

$itemtypeid= $_REQUEST['itemtypeid'];
$itembrand= $_REQUEST['itemtypeid'];
$itemmodel= $_REQUEST['itemmodel'];
$itemcolor= $_REQUEST['itemcolor'];
$itemsn= $_REQUEST['itemsn'];

$sqlQuery="insert into useritems(userid, itemtypeid, brand, model, serialnumber, color, img_front, img_back, img_sn) values($loggedInUserId, $itemtypeid, '$itembrand', '$itemmodel', '$itemsn', '$itemcolor', '$filefront', '$fileback', '$filesn')";

if($itemtypeid <> '')
{
    try
    {
        $dbh->beginTransaction();
        $dbh->query($sqlQuery);
        $dbh->commit();
    }
    catch(PDOException $e)
    {
        $dbh->rollback();
        echo "Failed to complete transaction: " . $e->getMessage() . "\n";
        exit;
    }
}

$host  = $_SERVER['HTTP_HOST'];
$uri   = rtrim(dirname($_SERVER['PHP_SELF']), '/\\');
$extra = 'itemregtr.php';

//redirect to secured home page (home.php)
header("Location:http://$host$uri/$extra");